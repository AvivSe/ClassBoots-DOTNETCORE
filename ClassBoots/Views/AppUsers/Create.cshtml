@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model ClassBoots.Models.AppUser

@{
    ViewData["Title"] = "Create";
}
@if (SignInManager.IsSignedIn(User))
{
    <h2>Create</h2>
    <h4>AppUser</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create" asp-route-returnUrl="~">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input asp-for="Email" id="email" class="form-control user-form" type="hidden" value="@UserManager.GetUserName(User)" />
                </div>
                <div class="form-group">
                    <label asp-for="FirstName" class="control-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>
    <!-- TODO: need to remove -->
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    <!-- until here!!! -->
    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    }
}